
traverse_spiral:     file format elf32-i386


Disassembly of section .init:

00000544 <_init>:
 544:	53                   	push   %ebx
 545:	83 ec 08             	sub    $0x8,%esp
 548:	e8 53 01 00 00       	call   6a0 <__x86.get_pc_thunk.bx>
 54d:	81 c3 5b 2a 00 00    	add    $0x2a5b,%ebx
 553:	8b 83 4c 00 00 00    	mov    0x4c(%ebx),%eax
 559:	85 c0                	test   %eax,%eax
 55b:	74 05                	je     562 <_init+0x1e>
 55d:	e8 f6 00 00 00       	call   658 <__gmon_start__@plt>
 562:	83 c4 08             	add    $0x8,%esp
 565:	5b                   	pop    %ebx
 566:	c3                   	ret    

Disassembly of section .plt:

00000570 <.plt>:
 570:	ff b3 04 00 00 00    	pushl  0x4(%ebx)
 576:	ff a3 08 00 00 00    	jmp    *0x8(%ebx)
 57c:	00 00                	add    %al,(%eax)
	...

00000580 <getline@plt>:
 580:	ff a3 0c 00 00 00    	jmp    *0xc(%ebx)
 586:	68 00 00 00 00       	push   $0x0
 58b:	e9 e0 ff ff ff       	jmp    570 <.plt>

00000590 <free@plt>:
 590:	ff a3 10 00 00 00    	jmp    *0x10(%ebx)
 596:	68 08 00 00 00       	push   $0x8
 59b:	e9 d0 ff ff ff       	jmp    570 <.plt>

000005a0 <fclose@plt>:
 5a0:	ff a3 14 00 00 00    	jmp    *0x14(%ebx)
 5a6:	68 10 00 00 00       	push   $0x10
 5ab:	e9 c0 ff ff ff       	jmp    570 <.plt>

000005b0 <__stack_chk_fail@plt>:
 5b0:	ff a3 18 00 00 00    	jmp    *0x18(%ebx)
 5b6:	68 18 00 00 00       	push   $0x18
 5bb:	e9 b0 ff ff ff       	jmp    570 <.plt>

000005c0 <fwrite@plt>:
 5c0:	ff a3 1c 00 00 00    	jmp    *0x1c(%ebx)
 5c6:	68 20 00 00 00       	push   $0x20
 5cb:	e9 a0 ff ff ff       	jmp    570 <.plt>

000005d0 <malloc@plt>:
 5d0:	ff a3 20 00 00 00    	jmp    *0x20(%ebx)
 5d6:	68 28 00 00 00       	push   $0x28
 5db:	e9 90 ff ff ff       	jmp    570 <.plt>

000005e0 <puts@plt>:
 5e0:	ff a3 24 00 00 00    	jmp    *0x24(%ebx)
 5e6:	68 30 00 00 00       	push   $0x30
 5eb:	e9 80 ff ff ff       	jmp    570 <.plt>

000005f0 <exit@plt>:
 5f0:	ff a3 28 00 00 00    	jmp    *0x28(%ebx)
 5f6:	68 38 00 00 00       	push   $0x38
 5fb:	e9 70 ff ff ff       	jmp    570 <.plt>

00000600 <__libc_start_main@plt>:
 600:	ff a3 2c 00 00 00    	jmp    *0x2c(%ebx)
 606:	68 40 00 00 00       	push   $0x40
 60b:	e9 60 ff ff ff       	jmp    570 <.plt>

00000610 <fprintf@plt>:
 610:	ff a3 30 00 00 00    	jmp    *0x30(%ebx)
 616:	68 48 00 00 00       	push   $0x48
 61b:	e9 50 ff ff ff       	jmp    570 <.plt>

00000620 <fopen@plt>:
 620:	ff a3 34 00 00 00    	jmp    *0x34(%ebx)
 626:	68 50 00 00 00       	push   $0x50
 62b:	e9 40 ff ff ff       	jmp    570 <.plt>

00000630 <strtok@plt>:
 630:	ff a3 38 00 00 00    	jmp    *0x38(%ebx)
 636:	68 58 00 00 00       	push   $0x58
 63b:	e9 30 ff ff ff       	jmp    570 <.plt>

00000640 <atoi@plt>:
 640:	ff a3 3c 00 00 00    	jmp    *0x3c(%ebx)
 646:	68 60 00 00 00       	push   $0x60
 64b:	e9 20 ff ff ff       	jmp    570 <.plt>

Disassembly of section .plt.got:

00000650 <__cxa_finalize@plt>:
 650:	ff a3 48 00 00 00    	jmp    *0x48(%ebx)
 656:	66 90                	xchg   %ax,%ax

00000658 <__gmon_start__@plt>:
 658:	ff a3 4c 00 00 00    	jmp    *0x4c(%ebx)
 65e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000660 <_start>:
 660:	31 ed                	xor    %ebp,%ebp
 662:	5e                   	pop    %esi
 663:	89 e1                	mov    %esp,%ecx
 665:	83 e4 f0             	and    $0xfffffff0,%esp
 668:	50                   	push   %eax
 669:	54                   	push   %esp
 66a:	52                   	push   %edx
 66b:	e8 22 00 00 00       	call   692 <_start+0x32>
 670:	81 c3 38 29 00 00    	add    $0x2938,%ebx
 676:	8d 83 38 de ff ff    	lea    -0x21c8(%ebx),%eax
 67c:	50                   	push   %eax
 67d:	8d 83 d8 dd ff ff    	lea    -0x2228(%ebx),%eax
 683:	50                   	push   %eax
 684:	51                   	push   %ecx
 685:	56                   	push   %esi
 686:	ff b3 50 00 00 00    	pushl  0x50(%ebx)
 68c:	e8 6f ff ff ff       	call   600 <__libc_start_main@plt>
 691:	f4                   	hlt    
 692:	8b 1c 24             	mov    (%esp),%ebx
 695:	c3                   	ret    
 696:	66 90                	xchg   %ax,%ax
 698:	66 90                	xchg   %ax,%ax
 69a:	66 90                	xchg   %ax,%ax
 69c:	66 90                	xchg   %ax,%ax
 69e:	66 90                	xchg   %ax,%ax

000006a0 <__x86.get_pc_thunk.bx>:
 6a0:	8b 1c 24             	mov    (%esp),%ebx
 6a3:	c3                   	ret    
 6a4:	66 90                	xchg   %ax,%ax
 6a6:	66 90                	xchg   %ax,%ax
 6a8:	66 90                	xchg   %ax,%ax
 6aa:	66 90                	xchg   %ax,%ax
 6ac:	66 90                	xchg   %ax,%ax
 6ae:	66 90                	xchg   %ax,%ax

000006b0 <deregister_tm_clones>:
 6b0:	e8 e4 00 00 00       	call   799 <__x86.get_pc_thunk.dx>
 6b5:	81 c2 f3 28 00 00    	add    $0x28f3,%edx
 6bb:	8d 8a 64 00 00 00    	lea    0x64(%edx),%ecx
 6c1:	8d 82 64 00 00 00    	lea    0x64(%edx),%eax
 6c7:	39 c8                	cmp    %ecx,%eax
 6c9:	74 1d                	je     6e8 <deregister_tm_clones+0x38>
 6cb:	8b 82 40 00 00 00    	mov    0x40(%edx),%eax
 6d1:	85 c0                	test   %eax,%eax
 6d3:	74 13                	je     6e8 <deregister_tm_clones+0x38>
 6d5:	55                   	push   %ebp
 6d6:	89 e5                	mov    %esp,%ebp
 6d8:	83 ec 14             	sub    $0x14,%esp
 6db:	51                   	push   %ecx
 6dc:	ff d0                	call   *%eax
 6de:	83 c4 10             	add    $0x10,%esp
 6e1:	c9                   	leave  
 6e2:	c3                   	ret    
 6e3:	90                   	nop
 6e4:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 6e8:	f3 c3                	repz ret 
 6ea:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000006f0 <register_tm_clones>:
 6f0:	e8 a4 00 00 00       	call   799 <__x86.get_pc_thunk.dx>
 6f5:	81 c2 b3 28 00 00    	add    $0x28b3,%edx
 6fb:	55                   	push   %ebp
 6fc:	8d 8a 64 00 00 00    	lea    0x64(%edx),%ecx
 702:	8d 82 64 00 00 00    	lea    0x64(%edx),%eax
 708:	29 c8                	sub    %ecx,%eax
 70a:	89 e5                	mov    %esp,%ebp
 70c:	53                   	push   %ebx
 70d:	c1 f8 02             	sar    $0x2,%eax
 710:	89 c3                	mov    %eax,%ebx
 712:	83 ec 04             	sub    $0x4,%esp
 715:	c1 eb 1f             	shr    $0x1f,%ebx
 718:	01 d8                	add    %ebx,%eax
 71a:	d1 f8                	sar    %eax
 71c:	74 14                	je     732 <register_tm_clones+0x42>
 71e:	8b 92 54 00 00 00    	mov    0x54(%edx),%edx
 724:	85 d2                	test   %edx,%edx
 726:	74 0a                	je     732 <register_tm_clones+0x42>
 728:	83 ec 08             	sub    $0x8,%esp
 72b:	50                   	push   %eax
 72c:	51                   	push   %ecx
 72d:	ff d2                	call   *%edx
 72f:	83 c4 10             	add    $0x10,%esp
 732:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 735:	c9                   	leave  
 736:	c3                   	ret    
 737:	89 f6                	mov    %esi,%esi
 739:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000740 <__do_global_dtors_aux>:
 740:	55                   	push   %ebp
 741:	89 e5                	mov    %esp,%ebp
 743:	53                   	push   %ebx
 744:	e8 57 ff ff ff       	call   6a0 <__x86.get_pc_thunk.bx>
 749:	81 c3 5f 28 00 00    	add    $0x285f,%ebx
 74f:	83 ec 04             	sub    $0x4,%esp
 752:	80 bb 64 00 00 00 00 	cmpb   $0x0,0x64(%ebx)
 759:	75 27                	jne    782 <__do_global_dtors_aux+0x42>
 75b:	8b 83 48 00 00 00    	mov    0x48(%ebx),%eax
 761:	85 c0                	test   %eax,%eax
 763:	74 11                	je     776 <__do_global_dtors_aux+0x36>
 765:	83 ec 0c             	sub    $0xc,%esp
 768:	ff b3 5c 00 00 00    	pushl  0x5c(%ebx)
 76e:	e8 dd fe ff ff       	call   650 <__cxa_finalize@plt>
 773:	83 c4 10             	add    $0x10,%esp
 776:	e8 35 ff ff ff       	call   6b0 <deregister_tm_clones>
 77b:	c6 83 64 00 00 00 01 	movb   $0x1,0x64(%ebx)
 782:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 785:	c9                   	leave  
 786:	c3                   	ret    
 787:	89 f6                	mov    %esi,%esi
 789:	8d bc 27 00 00 00 00 	lea    0x0(%edi,%eiz,1),%edi

00000790 <frame_dummy>:
 790:	55                   	push   %ebp
 791:	89 e5                	mov    %esp,%ebp
 793:	5d                   	pop    %ebp
 794:	e9 57 ff ff ff       	jmp    6f0 <register_tm_clones>

00000799 <__x86.get_pc_thunk.dx>:
 799:	8b 14 24             	mov    (%esp),%edx
 79c:	c3                   	ret    

0000079d <get_dimensions>:
 79d:	55                   	push   %ebp
 79e:	89 e5                	mov    %esp,%ebp
 7a0:	53                   	push   %ebx
 7a1:	83 ec 24             	sub    $0x24,%esp
 7a4:	e8 f7 fe ff ff       	call   6a0 <__x86.get_pc_thunk.bx>
 7a9:	81 c3 ff 27 00 00    	add    $0x27ff,%ebx
 7af:	8b 45 08             	mov    0x8(%ebp),%eax
 7b2:	89 45 e4             	mov    %eax,-0x1c(%ebp)
 7b5:	8b 45 0c             	mov    0xc(%ebp),%eax
 7b8:	89 45 e0             	mov    %eax,-0x20(%ebp)
 7bb:	65 a1 14 00 00 00    	mov    %gs:0x14,%eax
 7c1:	89 45 f4             	mov    %eax,-0xc(%ebp)
 7c4:	31 c0                	xor    %eax,%eax
 7c6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 7cd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 7d4:	83 ec 04             	sub    $0x4,%esp
 7d7:	ff 75 e4             	pushl  -0x1c(%ebp)
 7da:	8d 45 f0             	lea    -0x10(%ebp),%eax
 7dd:	50                   	push   %eax
 7de:	8d 45 ec             	lea    -0x14(%ebp),%eax
 7e1:	50                   	push   %eax
 7e2:	e8 99 fd ff ff       	call   580 <getline@plt>
 7e7:	83 c4 10             	add    $0x10,%esp
 7ea:	83 f8 ff             	cmp    $0xffffffff,%eax
 7ed:	75 1c                	jne    80b <get_dimensions+0x6e>
 7ef:	83 ec 0c             	sub    $0xc,%esp
 7f2:	8d 83 7a de ff ff    	lea    -0x2186(%ebx),%eax
 7f8:	50                   	push   %eax
 7f9:	e8 e2 fd ff ff       	call   5e0 <puts@plt>
 7fe:	83 c4 10             	add    $0x10,%esp
 801:	83 ec 0c             	sub    $0xc,%esp
 804:	6a 01                	push   $0x1
 806:	e8 e5 fd ff ff       	call   5f0 <exit@plt>
 80b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 80e:	83 ec 0c             	sub    $0xc,%esp
 811:	50                   	push   %eax
 812:	e8 29 fe ff ff       	call   640 <atoi@plt>
 817:	83 c4 10             	add    $0x10,%esp
 81a:	89 c2                	mov    %eax,%edx
 81c:	8b 45 e0             	mov    -0x20(%ebp),%eax
 81f:	89 10                	mov    %edx,(%eax)
 821:	90                   	nop
 822:	8b 45 f4             	mov    -0xc(%ebp),%eax
 825:	65 33 05 14 00 00 00 	xor    %gs:0x14,%eax
 82c:	74 05                	je     833 <get_dimensions+0x96>
 82e:	e8 bd 05 00 00       	call   df0 <__stack_chk_fail_local>
 833:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 836:	c9                   	leave  
 837:	c3                   	ret    

00000838 <traverse_layer>:
 838:	55                   	push   %ebp
 839:	89 e5                	mov    %esp,%ebp
 83b:	53                   	push   %ebx
 83c:	83 ec 14             	sub    $0x14,%esp
 83f:	e8 5c fe ff ff       	call   6a0 <__x86.get_pc_thunk.bx>
 844:	81 c3 64 27 00 00    	add    $0x2764,%ebx
 84a:	8b 45 0c             	mov    0xc(%ebp),%eax
 84d:	99                   	cltd   
 84e:	c1 ea 1f             	shr    $0x1f,%edx
 851:	01 d0                	add    %edx,%eax
 853:	83 e0 01             	and    $0x1,%eax
 856:	29 d0                	sub    %edx,%eax
 858:	83 f8 01             	cmp    $0x1,%eax
 85b:	75 4d                	jne    8aa <traverse_layer+0x72>
 85d:	8b 45 0c             	mov    0xc(%ebp),%eax
 860:	83 c0 01             	add    $0x1,%eax
 863:	89 c2                	mov    %eax,%edx
 865:	c1 ea 1f             	shr    $0x1f,%edx
 868:	01 d0                	add    %edx,%eax
 86a:	d1 f8                	sar    %eax
 86c:	83 e8 01             	sub    $0x1,%eax
 86f:	39 45 10             	cmp    %eax,0x10(%ebp)
 872:	75 36                	jne    8aa <traverse_layer+0x72>
 874:	8b 45 10             	mov    0x10(%ebp),%eax
 877:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 87e:	8b 45 08             	mov    0x8(%ebp),%eax
 881:	01 d0                	add    %edx,%eax
 883:	8b 00                	mov    (%eax),%eax
 885:	8b 55 10             	mov    0x10(%ebp),%edx
 888:	c1 e2 02             	shl    $0x2,%edx
 88b:	01 d0                	add    %edx,%eax
 88d:	8b 00                	mov    (%eax),%eax
 88f:	83 ec 04             	sub    $0x4,%esp
 892:	50                   	push   %eax
 893:	8d 83 97 de ff ff    	lea    -0x2169(%ebx),%eax
 899:	50                   	push   %eax
 89a:	ff 75 14             	pushl  0x14(%ebp)
 89d:	e8 6e fd ff ff       	call   610 <fprintf@plt>
 8a2:	83 c4 10             	add    $0x10,%esp
 8a5:	e9 81 01 00 00       	jmp    a2b <traverse_layer+0x1f3>
 8aa:	8b 45 10             	mov    0x10(%ebp),%eax
 8ad:	89 45 f0             	mov    %eax,-0x10(%ebp)
 8b0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 8b7:	eb 3a                	jmp    8f3 <traverse_layer+0xbb>
 8b9:	8b 45 f0             	mov    -0x10(%ebp),%eax
 8bc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 8c3:	8b 45 08             	mov    0x8(%ebp),%eax
 8c6:	01 d0                	add    %edx,%eax
 8c8:	8b 00                	mov    (%eax),%eax
 8ca:	8b 4d f0             	mov    -0x10(%ebp),%ecx
 8cd:	8b 55 ec             	mov    -0x14(%ebp),%edx
 8d0:	01 ca                	add    %ecx,%edx
 8d2:	c1 e2 02             	shl    $0x2,%edx
 8d5:	01 d0                	add    %edx,%eax
 8d7:	8b 00                	mov    (%eax),%eax
 8d9:	83 ec 04             	sub    $0x4,%esp
 8dc:	50                   	push   %eax
 8dd:	8d 83 9b de ff ff    	lea    -0x2165(%ebx),%eax
 8e3:	50                   	push   %eax
 8e4:	ff 75 14             	pushl  0x14(%ebp)
 8e7:	e8 24 fd ff ff       	call   610 <fprintf@plt>
 8ec:	83 c4 10             	add    $0x10,%esp
 8ef:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 8f3:	8b 45 10             	mov    0x10(%ebp),%eax
 8f6:	8d 14 00             	lea    (%eax,%eax,1),%edx
 8f9:	8b 45 0c             	mov    0xc(%ebp),%eax
 8fc:	29 d0                	sub    %edx,%eax
 8fe:	39 45 ec             	cmp    %eax,-0x14(%ebp)
 901:	7c b6                	jl     8b9 <traverse_layer+0x81>
 903:	8b 45 0c             	mov    0xc(%ebp),%eax
 906:	2b 45 10             	sub    0x10(%ebp),%eax
 909:	83 e8 01             	sub    $0x1,%eax
 90c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 90f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 916:	eb 3d                	jmp    955 <traverse_layer+0x11d>
 918:	8b 55 10             	mov    0x10(%ebp),%edx
 91b:	8b 45 ec             	mov    -0x14(%ebp),%eax
 91e:	01 d0                	add    %edx,%eax
 920:	83 c0 01             	add    $0x1,%eax
 923:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 92a:	8b 45 08             	mov    0x8(%ebp),%eax
 92d:	01 d0                	add    %edx,%eax
 92f:	8b 00                	mov    (%eax),%eax
 931:	8b 55 f4             	mov    -0xc(%ebp),%edx
 934:	c1 e2 02             	shl    $0x2,%edx
 937:	01 d0                	add    %edx,%eax
 939:	8b 00                	mov    (%eax),%eax
 93b:	83 ec 04             	sub    $0x4,%esp
 93e:	50                   	push   %eax
 93f:	8d 83 9b de ff ff    	lea    -0x2165(%ebx),%eax
 945:	50                   	push   %eax
 946:	ff 75 14             	pushl  0x14(%ebp)
 949:	e8 c2 fc ff ff       	call   610 <fprintf@plt>
 94e:	83 c4 10             	add    $0x10,%esp
 951:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 955:	8b 45 10             	mov    0x10(%ebp),%eax
 958:	8d 14 00             	lea    (%eax,%eax,1),%edx
 95b:	8b 45 0c             	mov    0xc(%ebp),%eax
 95e:	29 d0                	sub    %edx,%eax
 960:	83 e8 01             	sub    $0x1,%eax
 963:	39 45 ec             	cmp    %eax,-0x14(%ebp)
 966:	7c b0                	jl     918 <traverse_layer+0xe0>
 968:	8b 45 0c             	mov    0xc(%ebp),%eax
 96b:	2b 45 10             	sub    0x10(%ebp),%eax
 96e:	83 e8 01             	sub    $0x1,%eax
 971:	89 45 f0             	mov    %eax,-0x10(%ebp)
 974:	8b 45 10             	mov    0x10(%ebp),%eax
 977:	8d 14 00             	lea    (%eax,%eax,1),%edx
 97a:	8b 45 0c             	mov    0xc(%ebp),%eax
 97d:	29 d0                	sub    %edx,%eax
 97f:	83 e8 01             	sub    $0x1,%eax
 982:	89 45 ec             	mov    %eax,-0x14(%ebp)
 985:	eb 3b                	jmp    9c2 <traverse_layer+0x18a>
 987:	8b 45 f4             	mov    -0xc(%ebp),%eax
 98a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 991:	8b 45 08             	mov    0x8(%ebp),%eax
 994:	01 d0                	add    %edx,%eax
 996:	8b 00                	mov    (%eax),%eax
 998:	8b 55 ec             	mov    -0x14(%ebp),%edx
 99b:	81 c2 ff ff ff 3f    	add    $0x3fffffff,%edx
 9a1:	c1 e2 02             	shl    $0x2,%edx
 9a4:	01 d0                	add    %edx,%eax
 9a6:	8b 00                	mov    (%eax),%eax
 9a8:	83 ec 04             	sub    $0x4,%esp
 9ab:	50                   	push   %eax
 9ac:	8d 83 9b de ff ff    	lea    -0x2165(%ebx),%eax
 9b2:	50                   	push   %eax
 9b3:	ff 75 14             	pushl  0x14(%ebp)
 9b6:	e8 55 fc ff ff       	call   610 <fprintf@plt>
 9bb:	83 c4 10             	add    $0x10,%esp
 9be:	83 6d ec 01          	subl   $0x1,-0x14(%ebp)
 9c2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)
 9c6:	7f bf                	jg     987 <traverse_layer+0x14f>
 9c8:	8b 45 10             	mov    0x10(%ebp),%eax
 9cb:	89 45 f4             	mov    %eax,-0xc(%ebp)
 9ce:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 9d5:	eb 41                	jmp    a18 <traverse_layer+0x1e0>
 9d7:	8b 55 0c             	mov    0xc(%ebp),%edx
 9da:	8b 45 ec             	mov    -0x14(%ebp),%eax
 9dd:	29 c2                	sub    %eax,%edx
 9df:	89 d0                	mov    %edx,%eax
 9e1:	05 fe ff ff 3f       	add    $0x3ffffffe,%eax
 9e6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 9ed:	8b 45 08             	mov    0x8(%ebp),%eax
 9f0:	01 d0                	add    %edx,%eax
 9f2:	8b 00                	mov    (%eax),%eax
 9f4:	8b 55 f4             	mov    -0xc(%ebp),%edx
 9f7:	c1 e2 02             	shl    $0x2,%edx
 9fa:	01 d0                	add    %edx,%eax
 9fc:	8b 00                	mov    (%eax),%eax
 9fe:	83 ec 04             	sub    $0x4,%esp
 a01:	50                   	push   %eax
 a02:	8d 83 9b de ff ff    	lea    -0x2165(%ebx),%eax
 a08:	50                   	push   %eax
 a09:	ff 75 14             	pushl  0x14(%ebp)
 a0c:	e8 ff fb ff ff       	call   610 <fprintf@plt>
 a11:	83 c4 10             	add    $0x10,%esp
 a14:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 a18:	8b 45 10             	mov    0x10(%ebp),%eax
 a1b:	8d 14 00             	lea    (%eax,%eax,1),%edx
 a1e:	8b 45 0c             	mov    0xc(%ebp),%eax
 a21:	29 d0                	sub    %edx,%eax
 a23:	83 e8 02             	sub    $0x2,%eax
 a26:	39 45 ec             	cmp    %eax,-0x14(%ebp)
 a29:	7c ac                	jl     9d7 <traverse_layer+0x19f>
 a2b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 a2e:	c9                   	leave  
 a2f:	c3                   	ret    

00000a30 <traverse_spirally>:
 a30:	55                   	push   %ebp
 a31:	89 e5                	mov    %esp,%ebp
 a33:	83 ec 18             	sub    $0x18,%esp
 a36:	e8 34 03 00 00       	call   d6f <__x86.get_pc_thunk.ax>
 a3b:	05 6d 25 00 00       	add    $0x256d,%eax
 a40:	8b 45 08             	mov    0x8(%ebp),%eax
 a43:	8b 00                	mov    (%eax),%eax
 a45:	89 45 f4             	mov    %eax,-0xc(%ebp)
 a48:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
 a4f:	8b 45 f4             	mov    -0xc(%ebp),%eax
 a52:	89 c2                	mov    %eax,%edx
 a54:	c1 ea 1f             	shr    $0x1f,%edx
 a57:	01 d0                	add    %edx,%eax
 a59:	d1 f8                	sar    %eax
 a5b:	89 45 ec             	mov    %eax,-0x14(%ebp)
 a5e:	8b 45 f4             	mov    -0xc(%ebp),%eax
 a61:	99                   	cltd   
 a62:	c1 ea 1f             	shr    $0x1f,%edx
 a65:	01 d0                	add    %edx,%eax
 a67:	83 e0 01             	and    $0x1,%eax
 a6a:	29 d0                	sub    %edx,%eax
 a6c:	83 f8 01             	cmp    $0x1,%eax
 a6f:	75 04                	jne    a75 <traverse_spirally+0x45>
 a71:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
 a75:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
 a7c:	eb 1c                	jmp    a9a <traverse_spirally+0x6a>
 a7e:	8b 45 08             	mov    0x8(%ebp),%eax
 a81:	8b 40 04             	mov    0x4(%eax),%eax
 a84:	ff 75 0c             	pushl  0xc(%ebp)
 a87:	ff 75 f0             	pushl  -0x10(%ebp)
 a8a:	ff 75 f4             	pushl  -0xc(%ebp)
 a8d:	50                   	push   %eax
 a8e:	e8 a5 fd ff ff       	call   838 <traverse_layer>
 a93:	83 c4 10             	add    $0x10,%esp
 a96:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
 a9a:	8b 45 f0             	mov    -0x10(%ebp),%eax
 a9d:	3b 45 ec             	cmp    -0x14(%ebp),%eax
 aa0:	7c dc                	jl     a7e <traverse_spirally+0x4e>
 aa2:	90                   	nop
 aa3:	c9                   	leave  
 aa4:	c3                   	ret    

00000aa5 <main>:
 aa5:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 aa9:	83 e4 f0             	and    $0xfffffff0,%esp
 aac:	ff 71 fc             	pushl  -0x4(%ecx)
 aaf:	55                   	push   %ebp
 ab0:	89 e5                	mov    %esp,%ebp
 ab2:	56                   	push   %esi
 ab3:	53                   	push   %ebx
 ab4:	51                   	push   %ecx
 ab5:	83 ec 5c             	sub    $0x5c,%esp
 ab8:	e8 e3 fb ff ff       	call   6a0 <__x86.get_pc_thunk.bx>
 abd:	81 c3 eb 24 00 00    	add    $0x24eb,%ebx
 ac3:	89 c8                	mov    %ecx,%eax
 ac5:	8b 50 04             	mov    0x4(%eax),%edx
 ac8:	89 55 a4             	mov    %edx,-0x5c(%ebp)
 acb:	65 8b 0d 14 00 00 00 	mov    %gs:0x14,%ecx
 ad2:	89 4d e4             	mov    %ecx,-0x1c(%ebp)
 ad5:	31 c9                	xor    %ecx,%ecx
 ad7:	83 38 03             	cmpl   $0x3,(%eax)
 ada:	74 12                	je     aee <main+0x49>
 adc:	83 ec 0c             	sub    $0xc,%esp
 adf:	8d 83 a0 de ff ff    	lea    -0x2160(%ebx),%eax
 ae5:	50                   	push   %eax
 ae6:	e8 f5 fa ff ff       	call   5e0 <puts@plt>
 aeb:	83 c4 10             	add    $0x10,%esp
 aee:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 af1:	83 c0 04             	add    $0x4,%eax
 af4:	8b 00                	mov    (%eax),%eax
 af6:	83 ec 08             	sub    $0x8,%esp
 af9:	8d 93 dc de ff ff    	lea    -0x2124(%ebx),%edx
 aff:	52                   	push   %edx
 b00:	50                   	push   %eax
 b01:	e8 1a fb ff ff       	call   620 <fopen@plt>
 b06:	83 c4 10             	add    $0x10,%esp
 b09:	89 45 d4             	mov    %eax,-0x2c(%ebp)
 b0c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)
 b10:	75 26                	jne    b38 <main+0x93>
 b12:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 b18:	8b 00                	mov    (%eax),%eax
 b1a:	50                   	push   %eax
 b1b:	6a 1d                	push   $0x1d
 b1d:	6a 01                	push   $0x1
 b1f:	8d 83 de de ff ff    	lea    -0x2122(%ebx),%eax
 b25:	50                   	push   %eax
 b26:	e8 95 fa ff ff       	call   5c0 <fwrite@plt>
 b2b:	83 c4 10             	add    $0x10,%esp
 b2e:	83 ec 0c             	sub    $0xc,%esp
 b31:	6a 01                	push   $0x1
 b33:	e8 b8 fa ff ff       	call   5f0 <exit@plt>
 b38:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%ebp)
 b3f:	83 ec 08             	sub    $0x8,%esp
 b42:	8d 45 b4             	lea    -0x4c(%ebp),%eax
 b45:	50                   	push   %eax
 b46:	ff 75 d4             	pushl  -0x2c(%ebp)
 b49:	e8 4f fc ff ff       	call   79d <get_dimensions>
 b4e:	83 c4 10             	add    $0x10,%esp
 b51:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 b54:	c1 e0 02             	shl    $0x2,%eax
 b57:	83 ec 0c             	sub    $0xc,%esp
 b5a:	50                   	push   %eax
 b5b:	e8 70 fa ff ff       	call   5d0 <malloc@plt>
 b60:	83 c4 10             	add    $0x10,%esp
 b63:	89 45 d8             	mov    %eax,-0x28(%ebp)
 b66:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%ebp)
 b6d:	eb 28                	jmp    b97 <main+0xf2>
 b6f:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 b72:	c1 e0 02             	shl    $0x2,%eax
 b75:	8b 55 c0             	mov    -0x40(%ebp),%edx
 b78:	8d 0c 95 00 00 00 00 	lea    0x0(,%edx,4),%ecx
 b7f:	8b 55 d8             	mov    -0x28(%ebp),%edx
 b82:	8d 34 11             	lea    (%ecx,%edx,1),%esi
 b85:	83 ec 0c             	sub    $0xc,%esp
 b88:	50                   	push   %eax
 b89:	e8 42 fa ff ff       	call   5d0 <malloc@plt>
 b8e:	83 c4 10             	add    $0x10,%esp
 b91:	89 06                	mov    %eax,(%esi)
 b93:	83 45 c0 01          	addl   $0x1,-0x40(%ebp)
 b97:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 b9a:	39 45 c0             	cmp    %eax,-0x40(%ebp)
 b9d:	7c d0                	jl     b6f <main+0xca>
 b9f:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)
 ba6:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%ebp)
 bad:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%ebp)
 bb4:	c7 45 c8 00 00 00 00 	movl   $0x0,-0x38(%ebp)
 bbb:	e9 aa 00 00 00       	jmp    c6a <main+0x1c5>
 bc0:	83 ec 04             	sub    $0x4,%esp
 bc3:	ff 75 d4             	pushl  -0x2c(%ebp)
 bc6:	8d 45 bc             	lea    -0x44(%ebp),%eax
 bc9:	50                   	push   %eax
 bca:	8d 45 b8             	lea    -0x48(%ebp),%eax
 bcd:	50                   	push   %eax
 bce:	e8 ad f9 ff ff       	call   580 <getline@plt>
 bd3:	83 c4 10             	add    $0x10,%esp
 bd6:	83 f8 ff             	cmp    $0xffffffff,%eax
 bd9:	75 1c                	jne    bf7 <main+0x152>
 bdb:	83 ec 0c             	sub    $0xc,%esp
 bde:	8d 83 7a de ff ff    	lea    -0x2186(%ebx),%eax
 be4:	50                   	push   %eax
 be5:	e8 f6 f9 ff ff       	call   5e0 <puts@plt>
 bea:	83 c4 10             	add    $0x10,%esp
 bed:	83 ec 0c             	sub    $0xc,%esp
 bf0:	6a 01                	push   $0x1
 bf2:	e8 f9 f9 ff ff       	call   5f0 <exit@plt>
 bf7:	8b 93 60 00 00 00    	mov    0x60(%ebx),%edx
 bfd:	8b 45 b8             	mov    -0x48(%ebp),%eax
 c00:	83 ec 08             	sub    $0x8,%esp
 c03:	52                   	push   %edx
 c04:	50                   	push   %eax
 c05:	e8 26 fa ff ff       	call   630 <strtok@plt>
 c0a:	83 c4 10             	add    $0x10,%esp
 c0d:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 c10:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)
 c17:	eb 45                	jmp    c5e <main+0x1b9>
 c19:	8b 45 c8             	mov    -0x38(%ebp),%eax
 c1c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 c23:	8b 45 d8             	mov    -0x28(%ebp),%eax
 c26:	01 d0                	add    %edx,%eax
 c28:	8b 00                	mov    (%eax),%eax
 c2a:	8b 55 cc             	mov    -0x34(%ebp),%edx
 c2d:	c1 e2 02             	shl    $0x2,%edx
 c30:	8d 34 10             	lea    (%eax,%edx,1),%esi
 c33:	83 ec 0c             	sub    $0xc,%esp
 c36:	ff 75 c4             	pushl  -0x3c(%ebp)
 c39:	e8 02 fa ff ff       	call   640 <atoi@plt>
 c3e:	83 c4 10             	add    $0x10,%esp
 c41:	89 06                	mov    %eax,(%esi)
 c43:	8b 83 60 00 00 00    	mov    0x60(%ebx),%eax
 c49:	83 ec 08             	sub    $0x8,%esp
 c4c:	50                   	push   %eax
 c4d:	6a 00                	push   $0x0
 c4f:	e8 dc f9 ff ff       	call   630 <strtok@plt>
 c54:	83 c4 10             	add    $0x10,%esp
 c57:	89 45 c4             	mov    %eax,-0x3c(%ebp)
 c5a:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)
 c5e:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 c61:	39 45 cc             	cmp    %eax,-0x34(%ebp)
 c64:	7c b3                	jl     c19 <main+0x174>
 c66:	83 45 c8 01          	addl   $0x1,-0x38(%ebp)
 c6a:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 c6d:	39 45 c8             	cmp    %eax,-0x38(%ebp)
 c70:	0f 8c 4a ff ff ff    	jl     bc0 <main+0x11b>
 c76:	83 ec 0c             	sub    $0xc,%esp
 c79:	6a 08                	push   $0x8
 c7b:	e8 50 f9 ff ff       	call   5d0 <malloc@plt>
 c80:	83 c4 10             	add    $0x10,%esp
 c83:	89 45 dc             	mov    %eax,-0x24(%ebp)
 c86:	8b 55 b4             	mov    -0x4c(%ebp),%edx
 c89:	8b 45 dc             	mov    -0x24(%ebp),%eax
 c8c:	89 10                	mov    %edx,(%eax)
 c8e:	8b 45 dc             	mov    -0x24(%ebp),%eax
 c91:	8b 55 d8             	mov    -0x28(%ebp),%edx
 c94:	89 50 04             	mov    %edx,0x4(%eax)
 c97:	8b 45 a4             	mov    -0x5c(%ebp),%eax
 c9a:	83 c0 08             	add    $0x8,%eax
 c9d:	8b 00                	mov    (%eax),%eax
 c9f:	83 ec 08             	sub    $0x8,%esp
 ca2:	8d 93 fc de ff ff    	lea    -0x2104(%ebx),%edx
 ca8:	52                   	push   %edx
 ca9:	50                   	push   %eax
 caa:	e8 71 f9 ff ff       	call   620 <fopen@plt>
 caf:	83 c4 10             	add    $0x10,%esp
 cb2:	89 45 e0             	mov    %eax,-0x20(%ebp)
 cb5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)
 cb9:	75 26                	jne    ce1 <main+0x23c>
 cbb:	8b 83 44 00 00 00    	mov    0x44(%ebx),%eax
 cc1:	8b 00                	mov    (%eax),%eax
 cc3:	50                   	push   %eax
 cc4:	6a 1d                	push   $0x1d
 cc6:	6a 01                	push   $0x1
 cc8:	8d 83 de de ff ff    	lea    -0x2122(%ebx),%eax
 cce:	50                   	push   %eax
 ccf:	e8 ec f8 ff ff       	call   5c0 <fwrite@plt>
 cd4:	83 c4 10             	add    $0x10,%esp
 cd7:	83 ec 0c             	sub    $0xc,%esp
 cda:	6a 01                	push   $0x1
 cdc:	e8 0f f9 ff ff       	call   5f0 <exit@plt>
 ce1:	83 ec 08             	sub    $0x8,%esp
 ce4:	ff 75 e0             	pushl  -0x20(%ebp)
 ce7:	ff 75 dc             	pushl  -0x24(%ebp)
 cea:	e8 41 fd ff ff       	call   a30 <traverse_spirally>
 cef:	83 c4 10             	add    $0x10,%esp
 cf2:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)
 cf9:	eb 21                	jmp    d1c <main+0x277>
 cfb:	8b 45 d0             	mov    -0x30(%ebp),%eax
 cfe:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
 d05:	8b 45 d8             	mov    -0x28(%ebp),%eax
 d08:	01 d0                	add    %edx,%eax
 d0a:	8b 00                	mov    (%eax),%eax
 d0c:	83 ec 0c             	sub    $0xc,%esp
 d0f:	50                   	push   %eax
 d10:	e8 7b f8 ff ff       	call   590 <free@plt>
 d15:	83 c4 10             	add    $0x10,%esp
 d18:	83 45 d0 01          	addl   $0x1,-0x30(%ebp)
 d1c:	8b 45 b4             	mov    -0x4c(%ebp),%eax
 d1f:	39 45 d0             	cmp    %eax,-0x30(%ebp)
 d22:	7c d7                	jl     cfb <main+0x256>
 d24:	83 ec 0c             	sub    $0xc,%esp
 d27:	ff 75 d8             	pushl  -0x28(%ebp)
 d2a:	e8 61 f8 ff ff       	call   590 <free@plt>
 d2f:	83 c4 10             	add    $0x10,%esp
 d32:	83 ec 0c             	sub    $0xc,%esp
 d35:	ff 75 d4             	pushl  -0x2c(%ebp)
 d38:	e8 63 f8 ff ff       	call   5a0 <fclose@plt>
 d3d:	83 c4 10             	add    $0x10,%esp
 d40:	83 ec 0c             	sub    $0xc,%esp
 d43:	ff 75 e0             	pushl  -0x20(%ebp)
 d46:	e8 55 f8 ff ff       	call   5a0 <fclose@plt>
 d4b:	83 c4 10             	add    $0x10,%esp
 d4e:	b8 00 00 00 00       	mov    $0x0,%eax
 d53:	8b 4d e4             	mov    -0x1c(%ebp),%ecx
 d56:	65 33 0d 14 00 00 00 	xor    %gs:0x14,%ecx
 d5d:	74 05                	je     d64 <main+0x2bf>
 d5f:	e8 8c 00 00 00       	call   df0 <__stack_chk_fail_local>
 d64:	8d 65 f4             	lea    -0xc(%ebp),%esp
 d67:	59                   	pop    %ecx
 d68:	5b                   	pop    %ebx
 d69:	5e                   	pop    %esi
 d6a:	5d                   	pop    %ebp
 d6b:	8d 61 fc             	lea    -0x4(%ecx),%esp
 d6e:	c3                   	ret    

00000d6f <__x86.get_pc_thunk.ax>:
 d6f:	8b 04 24             	mov    (%esp),%eax
 d72:	c3                   	ret    
 d73:	66 90                	xchg   %ax,%ax
 d75:	66 90                	xchg   %ax,%ax
 d77:	66 90                	xchg   %ax,%ax
 d79:	66 90                	xchg   %ax,%ax
 d7b:	66 90                	xchg   %ax,%ax
 d7d:	66 90                	xchg   %ax,%ax
 d7f:	90                   	nop

00000d80 <__libc_csu_init>:
 d80:	55                   	push   %ebp
 d81:	57                   	push   %edi
 d82:	56                   	push   %esi
 d83:	53                   	push   %ebx
 d84:	e8 17 f9 ff ff       	call   6a0 <__x86.get_pc_thunk.bx>
 d89:	81 c3 1f 22 00 00    	add    $0x221f,%ebx
 d8f:	83 ec 0c             	sub    $0xc,%esp
 d92:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 d96:	8d b3 04 ff ff ff    	lea    -0xfc(%ebx),%esi
 d9c:	e8 a3 f7 ff ff       	call   544 <_init>
 da1:	8d 83 00 ff ff ff    	lea    -0x100(%ebx),%eax
 da7:	29 c6                	sub    %eax,%esi
 da9:	c1 fe 02             	sar    $0x2,%esi
 dac:	85 f6                	test   %esi,%esi
 dae:	74 25                	je     dd5 <__libc_csu_init+0x55>
 db0:	31 ff                	xor    %edi,%edi
 db2:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
 db8:	83 ec 04             	sub    $0x4,%esp
 dbb:	55                   	push   %ebp
 dbc:	ff 74 24 2c          	pushl  0x2c(%esp)
 dc0:	ff 74 24 2c          	pushl  0x2c(%esp)
 dc4:	ff 94 bb 00 ff ff ff 	call   *-0x100(%ebx,%edi,4)
 dcb:	83 c7 01             	add    $0x1,%edi
 dce:	83 c4 10             	add    $0x10,%esp
 dd1:	39 fe                	cmp    %edi,%esi
 dd3:	75 e3                	jne    db8 <__libc_csu_init+0x38>
 dd5:	83 c4 0c             	add    $0xc,%esp
 dd8:	5b                   	pop    %ebx
 dd9:	5e                   	pop    %esi
 dda:	5f                   	pop    %edi
 ddb:	5d                   	pop    %ebp
 ddc:	c3                   	ret    
 ddd:	8d 76 00             	lea    0x0(%esi),%esi

00000de0 <__libc_csu_fini>:
 de0:	f3 c3                	repz ret 
 de2:	66 90                	xchg   %ax,%ax
 de4:	66 90                	xchg   %ax,%ax
 de6:	66 90                	xchg   %ax,%ax
 de8:	66 90                	xchg   %ax,%ax
 dea:	66 90                	xchg   %ax,%ax
 dec:	66 90                	xchg   %ax,%ax
 dee:	66 90                	xchg   %ax,%ax

00000df0 <__stack_chk_fail_local>:
 df0:	53                   	push   %ebx
 df1:	e8 aa f8 ff ff       	call   6a0 <__x86.get_pc_thunk.bx>
 df6:	81 c3 b2 21 00 00    	add    $0x21b2,%ebx
 dfc:	83 ec 08             	sub    $0x8,%esp
 dff:	e8 ac f7 ff ff       	call   5b0 <__stack_chk_fail@plt>

Disassembly of section .fini:

00000e04 <_fini>:
 e04:	53                   	push   %ebx
 e05:	83 ec 08             	sub    $0x8,%esp
 e08:	e8 93 f8 ff ff       	call   6a0 <__x86.get_pc_thunk.bx>
 e0d:	81 c3 9b 21 00 00    	add    $0x219b,%ebx
 e13:	83 c4 08             	add    $0x8,%esp
 e16:	5b                   	pop    %ebx
 e17:	c3                   	ret    
